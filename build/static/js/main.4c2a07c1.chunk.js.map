{"version":3,"sources":["Components/SearchBox.js","Components/Card.js","Components/CardList.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Card","name","email","id","src","alt","CardList","robots","map","user","i","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKC,UAAU,MAAf,SACA,uBACAA,UAAY,mCACZC,KAAK,YACLC,YAAY,gBACZC,SAAYJ,OCOCK,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,sBAAKP,UAAW,sDAAhB,UACC,qBAAKQ,IAAG,+BAA0BD,EAA1B,YAAwCE,IAAI,WACpD,gCACC,6BAAKJ,IACL,4BAAIC,WCUOI,EAhBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,gCACKA,EAAOC,KAAI,SAACC,EAAMC,GACrB,OACA,cAAC,EAAD,CAECP,GAAII,EAAOG,GAAGP,GACdF,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,MAJR,QCKaC,G,MARA,SAACC,GACf,OACC,qBAAKC,MAAQ,CAACC,UAAW,SAAUC,OAAQ,kBAAoBC,OAAQ,SAAvE,SACEJ,EAAMK,aCuCKC,E,kDArCd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAAEC,GAClB,EAAKC,SAAS,CAAC3B,YAAa0B,EAAME,OAAOC,SAbzC,EAAKC,MAAQ,CACZjB,OAAQ,GACRb,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnB+B,MAAO,8CACLC,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAC3BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAU,CAACd,OAAQsB,S,oBAOzC,WACC,MAAgCC,KAAKN,MAA7BjB,EAAR,EAAQA,OAAQb,EAAhB,EAAgBA,YACVqC,EAAiBxB,EAAOyB,QAAO,SAAAC,GACpC,OAAOA,EAAMhC,KAAKiC,cAAcC,SAASzC,EAAYwC,kBAEtD,OAAQ3B,EAAO6B,OAGd,sBAAKxC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAgBmC,KAAKX,iBAChC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUZ,OAASwB,SANrB,6C,GAzBeM,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,SAKlDX,M","file":"static/js/main.4c2a07c1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t<input \r\n\t\tclassName = 'pa2 ba b--green bg-lightest-blue'\r\n\t\ttype='searchbox' \r\n\t\tplaceholder='search robots' \r\n\t\tonChange = {searchChange}\r\n\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn(\r\n\t\t<div className= 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img src={`https://robohash.org/${id}?200x200`} alt='robots' /> \r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t);\r\n}\r\n\r\nexport default Card; ","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t    {robots.map((user, i) => {\r\n\t\t\t\treturn  (\r\n\t\t\t\t<Card \r\n\t\t\t\t\tkey={i} \r\n\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\temail={robots[i].email} \r\n\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})};\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn(\r\n\t\t<div style ={{overflowY: 'scroll', border: '5px solid black',  height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll; ","import React, { Component } from 'react';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport CardList from '../Components/CardList.js';\r\nimport '../Containers/App.css';\r\nimport Scroll from '../Components/Scroll';\r\n\r\nclass App extends Component  {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch ('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response =>  response.json())\r\n\t\t\t.then(users => this.setState( {robots: users}))\r\n\t}\r\n\r\n\tonSearchChange = ( event ) => {\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { robots, searchfield } = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\t\treturn !robots.length ?\r\n\t\t\t<h1>Loading</h1> :\r\n\t\t(\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t\t<SearchBox searchChange = {this.onSearchChange} />\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<CardList robots={ filteredRobots } />\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />,  document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}